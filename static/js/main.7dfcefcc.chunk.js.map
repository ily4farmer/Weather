{"version":3,"sources":["img/sunset.svg","img/sunrise.svg","img/wind.svg","img/hum.svg","components/City/City.js","img/search.svg","components/form/Form.js","components/App/App.js","index.js"],"names":["City","props","className","name","country","temp","tempMax","tempMin","feedsLike","src","wind","alt","hum","sunset","sunrise","Form","onSubmit","weather","type","search","API_KEY","App","state","loading","undefined","time","ms","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","gettingWeather","e","a","preventDefault","city","target","elements","value","fetch","api_url","json","data","setTime","sys","sunrise_date","Math","round","main","temp_max","temp_min","felt","feels_like","setState","speed","humidity","console","log","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dfcefcc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sunset.740d712a.svg\";","export default __webpack_public_path__ + \"static/media/sunrise.90c5bd78.svg\";","export default __webpack_public_path__ + \"static/media/wind.8956b1a6.svg\";","export default __webpack_public_path__ + \"static/media/hum.8f9079d9.svg\";","import React from 'react';\r\nimport \"./City.sass\"\r\nimport sunset from '../../img/sunset.svg'\r\nimport sunrise from '../../img/sunrise.svg'\r\nimport wind from '../../img/wind.svg'\r\nimport hum from '../../img/hum.svg'\r\n\r\nexport default function City(props) {\r\n    return (\r\n        <section className=\"city\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"city__bg\"></div>\r\n                <div className=\"city-block\">\r\n                    <div className=\"city__header\">\r\n                        <h3 className=\"city__name\">{props.name}</h3>\r\n                        <h4 className=\"city__country\">{props.country}</h4>\r\n                    </div>\r\n                    <h2 className=\"city__temp\">{props.temp}°</h2>\r\n                    <div className=\"city__difference\">\r\n                        <span className=\"city__min\">max: {props.tempMax}°</span>\r\n                        <span className=\"city__max\">min: {props.tempMin}°</span>\r\n                    </div>\r\n                    <p className=\"city__felt\">felt: {props.feedsLike}°</p>\r\n                    <span></span>\r\n                    <div className=\"city__footer\">\r\n                        <ul className=\"city__list\">\r\n                            <li className=\"city__item\"><img src={wind} className=\"city__item-img\" alt=\"sunset\"/><span> wind {props.wind}km/h</span></li>\r\n                            <li className=\"city__item\"><img src={hum} className=\"city__item-img\" alt=\"sunrise\"/><span> hum {props.hum}%</span></li>\r\n                        </ul>\r\n                        <ul className=\"city__list\">\r\n                            <li className=\"city__item\"><img src={sunset}  className=\"city__item-img\" alt=\"sunset\"/>{props.sunset}</li>\r\n                            <li className=\"city__item\"><img src={sunrise} className=\"city__item-img\" alt=\"sunrise\"/> {props.sunrise}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/search.54ba158e.svg\";","import React from 'react';\r\nimport \"./Form.sass\"\r\nimport search from '../../img/search.svg'\r\n\r\nexport default function Form(props) {\r\n    return (\r\n        <section className=\"form\">\r\n            <div className=\"container\">\r\n                <form onSubmit={props.weather} className=\"form-block\">\r\n                    <input type=\"text\" name=\"city\" className=\"form__input\"/>\r\n                    <button className=\"form__btn\"><img src={search} alt=\"search\"/></button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    );\r\n}","import { Component } from 'react';\nimport './App.sass';\nimport City from '../City/City';\nimport Form from \"../form/Form\";\n\n\nconst API_KEY = '95b266d6b866574c26a3de9e0d1a1c01';\n\nexport default class App extends Component {\n\n  state = {\n    loading: false,\n    name: undefined, \n    temp: undefined,\n    tempMin: undefined,\n    tempMax: undefined,\n    feedsLike: undefined,\n    country: \"\",\n    sunrise: undefined,\n    sunset: undefined,\n    wind: undefined,\n    hum: undefined\n  }\n\n  time = (ms) =>{\n    var date = new Date(ms*1000);\n    var hours = date.getHours();\n    // Minutes part from the timestamp\n    var minutes = \"0\" + date.getMinutes();\n    // Seconds part from the timestamp\n    var seconds = \"0\" + date.getSeconds();\n    return hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n}\n\n\n  gettingWeather =  async(e) => {\n    e.preventDefault();\n    let city = e.target.elements.city.value;\n    \n    if (city) {\n      const api_url = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n\n      let date = new Date();\n      date.setTime(data.sys.sunrise)\n      const sunrise_date = this.time(data.sys.sunrise)\n      // date.setTime(data.sys.sunset)\n      const sunset = this.time(data.sys.sunset)\n      const temp = Math.round(data.main.temp),\n            temp_max  = Math.round(data.main.temp_max),\n            tempMin = Math.round(data.main.temp_min),\n            felt = Math.round(data.main.feels_like);\n\n\n      this.setState({\n        name: data.name, \n        temp: temp,\n        tempMin: tempMin,\n        tempMax: temp_max,\n        feedsLike: felt,\n        country: data.sys.country,\n        sunrise: sunrise_date,\n        sunset: sunset,\n        loading: true,\n        wind: data.wind.speed,\n        hum: data.main.humidity\n      })\n      console.log(data);\n    }\n  }\n\n  render() {\n    const {name, country, temp, tempMax, tempMin, feedsLike, sunrise, sunset,loading,wind, hum} = this.state;\n    return (\n      <div className=\"weather\">\n        <div className=\"container\">\n          <div className=\"weather-block\">\n            <h1 className=\"weather__title\">Check the weather in your city</h1>\n            <Form weather={this.gettingWeather} />\n            {loading ?  \n            <City \n            name={name} \n            country={country} \n            temp={temp}\n            feedsLike={feedsLike}\n            tempMax={tempMax}\n            tempMin={tempMin}\n            sunrise={sunrise}\n            sunset={sunset}\n            wind={wind}\n            hum={hum}/>\n            :\n            <div className=\"loader\">\n                <div className=\"container\">\n                  <div className=\"loader-block\">\n                    <span>Загрузка...</span>\n                  </div>\n                </div>\n            </div>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}